{"version":3,"sources":["PersonalKanban/services/StorageService.ts","PersonalKanban/providers/ThemeProvider.tsx","PersonalKanban/components/IconButton/IconButton.tsx","PersonalKanban/components/IconButton/index.tsx","PersonalKanban/components/Card/Card.tsx","PersonalKanban/components/Card/index.ts","PersonalKanban/enums/index.tsx","PersonalKanban/components/Radio/Radio.tsx","PersonalKanban/components/Radio/index.tsx","PersonalKanban/providers/TranslationProvider.tsx","PersonalKanban/components/ColumnForm/index.tsx","PersonalKanban/components/ColumnForm/ColumnForm.tsx","PersonalKanban/components/RecordForm/index.tsx","PersonalKanban/components/RecordForm/RecordForm.tsx","PersonalKanban/components/Column/Column.tsx","PersonalKanban/components/Column/index.tsx","PersonalKanban/components/Board/Board.tsx","PersonalKanban/constants/index.tsx","PersonalKanban/components/Board/index.ts","PersonalKanban/components/KanbanCard/index.tsx","PersonalKanban/components/KanbanCard/KanbanCard.tsx","PersonalKanban/components/KanbanColumn/KanbanColumn.tsx","PersonalKanban/components/KanbanColumn/index.tsx","PersonalKanban/components/KanbanBoard/index.tsx","PersonalKanban/components/KanbanBoard/KanbanBoard.tsx","PersonalKanban/services/Utils.ts","PersonalKanban/containers/Toolbar/index.tsx","PersonalKanban/containers/KanbanBoard/index.tsx","PersonalKanban/index.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["DARK_MODE","COLUMNS","getItem","key","JSON","parse","localStorage","setItem","value","stringify","StorageService","getDarkMode","setDarkMode","getColumns","setColumns","ThemeContext","React","createContext","useTheme","useContext","ThemeProvider","props","children","useState","darkTheme","setDarkTheme","handleToggleDarkTheme","useCallback","theme","createMuiTheme","palette","primary","lightGreen","brown","secondary","blueGrey","type","overrides","MuiPaper","root","cursor","padding","MuiDivider","backgroundColor","typography","fontFamily","fontWeightLight","fontWeightMedium","fontWeightRegular","fontWeightBold","light","MuiTextField","variant","margin","fullWidth","MuiButton","size","MuiRadio","custom","colors","pastel","violet","purple","pastelCode","indigo","blue","green","yellow","orange","red","useMemo","Provider","CssBaseline","icons","edit","EditIcon","delete","DeleteIcon","add","AddIcon","deleteSweep","DeleteSweepIcon","deleteForever","DeleteForeverIcon","invertColors","InvertColorsIcon","invertColorsOff","InvertColorsOffIcon","gitHub","GitHubIcon","language","LanguageIcon","personalKanban","DeveloperBoardIcon","info","InfoIcon","list","ListIcon","IconButton","icon","iconProps","rest","Icon","fontSize","useStyles","makeStyles","paper","height","description","maxHeight","minHeight","display","overflow","whiteSpace","Card","record","className","innerRef","style","showEditAction","showDeleteAction","onDelete","onEdit","title","createdAt","classes","handleEdit","handleDelete","Paper","clsx","ref","Box","alignItems","justifyContent","Typography","gutterBottom","noWrap","onClick","component","defaultProps","RecordColor","Purple","RECORD_SHADE","Indigo","Blue","Green","Yellow","Orange","Red","Default","DarkRecordColor","DARK_RECORD_SHADE","ColumnColor","COLUMN_SHADE","DarkColumnColor","DARK_COLUMN_SHADE","color","checked","Radio","forwardRef","i18n","i18next","createInstance","use","initReactI18next","LanguageDetector","init","fallbackLng","resources","cn","translation","de","en","es","fr","in","ind","jp","ru","interpolation","escapeValue","TranslationProvider","I18nextProvider","ColumnForm","t","useTranslation","column","disabled","formTitle","onSubmit","onCancel","useFormik","initialValues","Object","assign","wipEnabled","wipLimit","values","validate","errors","handleChange","handleSubmit","handleWipLimitChange","e","persist","target","test","Grid","container","spacing","item","xs","Divider","TextField","name","label","error","Boolean","helperText","onChange","multiline","rows","FormControlLabel","control","Checkbox","FormControl","FormLabel","RadioGroup","row","aria-label","keys","map","colorKey","Button","RecordForm","useColumnHeaderStyles","divider","marginTop","marginBottom","ColumnHeader","useColumnActionStyles","ColumnAction","showAddRecordAction","showAllRecordDeleteAction","disableAllRecordDeleteAction","disableAddRecordAction","onAddRecord","onDeleteAllRecord","useColumnCardListStyles","card","ColumnCardList","CardComponent","onRecordEdit","onRecordDelete","records","length","index","id","useColumnFooterStyles","ColumnFooter","content","useColumnStyles","Column","onAllRecordDelete","showDeleteAllRecordAction","ColumnHeaderComponent","ColumnActionComponent","ColumnCardListComponent","ColumnFooterComponent","caption","Infinity","columnColor","open","actions","dialog","setDialog","handleAddRecord","handleRecordEdit","handleRecordDelete","handleAllRecordDelete","handleOpenDialog","handleCloseDialog","handleOpenDeleteDialog","handleOpenEditDialog","handleOpenAddRecordDialog","handleOpenEditRecordDialog","handleOpenDeleteRecordDialog","handleOpenDeleteAllRecordDialog","elevation","Dialog","onClose","DialogTitle","DialogContent","DialogActions","useBoardStyles","width","Board","columns","ColumnComponent","placeholder","onColumnEdit","onColumnDelete","KanbanCard","recordColor","draggableId","provided","draggableProps","dragHandleProps","KanbanInnerColumnCardList","memo","KanbanColumnCardList","columnId","isDropDisabled","droppableId","droppableProps","KanbanColumn","_column","KanbanBoard","onCardMove","onColumnMove","getColumnById","find","getColumnByIndex","handleDragEnd","result","source","destination","onDragEnd","direction","getId","uuidv4","reorder","startIndex","endIndex","Array","from","splice","removed","getCreatedAt","moment","format","AddColumnButton","setOpen","ClearBoardButton","onClear","handleClear","DarkThemeButton","useToolbarStyles","maxWidth","minWidth","buttonGridItem","textAlign","Toolbar","clearButtonDisabled","onNewColumn","onClearBoard","muiTheme","useMuiTheme","isMobile","useMediaQuery","breakpoints","down","AppBar","flexGrow","useTinyManagerStyles","button","position","bottom","right","border","TinyManagerButton","styles","href","Link","useKanbanBoardStyles","toolbar","mixins","initialState","KanbanBoardContainer","cloneColumns","getColumnIndex","findIndex","c","getRecordIndex","recordId","r","handleClearBoard","handleAddColumn","handleColumnMove","updatedColumns","handleColumnEdit","_columns","columnIndex","handleColumnDelete","handleCardMove","sourceColumn","destinationColumn","sourceIndex","destinationIndex","getRecords","current","next","reordered","newColumns","reorderCards","recordIndex","_record","useEffect","PersonalKanban","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bbae932f.chunk.js","sourcesContent":["import { Column } from \"PersonalKanban/types\";\n\nconst DARK_MODE = \"dark_mode\";\nconst COLUMNS = \"columns\";\n\nexport function getItem(key: string) {\n  return JSON.parse(localStorage.getItem(key)!);\n}\n\nexport function setItem(key: string, value: any) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function getDarkMode() {\n  return getItem(DARK_MODE);\n}\n\nexport function setDarkMode(value: boolean) {\n  return setItem(DARK_MODE, value);\n}\n\nexport function setColumns(value: Column[]) {\n  return setItem(COLUMNS, value);\n}\n\nexport function getColumns() {\n  return getItem(COLUMNS);\n}\n\nconst StorageService = {\n  getItem,\n  setItem,\n  getDarkMode,\n  setDarkMode,\n  getColumns,\n  setColumns,\n};\n\nexport default StorageService;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  Theme,\n} from \"@material-ui/core/styles\";\nimport {\n  purple,\n  indigo,\n  blue,\n  green,\n  yellow,\n  orange,\n  red,\n  brown,\n  blueGrey,\n  lightGreen,\n} from \"@material-ui/core/colors\";\n\nimport StorageService from \"PersonalKanban/services/StorageService\";\n\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\n  interface Theme {\n    custom?: any;\n  }\n  interface ThemeOptions {\n    custom?: any;\n  }\n}\n\nconst ThemeContext = React.createContext({});\n\ntype ThemeProviderProps = {\n  darkTheme?: boolean;\n};\n\nconst pastelCode = 200;\n\nconst ThemeProvider: React.FC<ThemeProviderProps> = (props) => {\n  const { children } = props;\n\n  const [darkTheme, setDarkTheme] = React.useState(\n    props.darkTheme || StorageService.getDarkMode()\n  );\n\n  const handleToggleDarkTheme = React.useCallback(() => {\n    setDarkTheme((darkTheme: Boolean | undefined) => {\n      StorageService.setDarkMode(!darkTheme);\n      return !darkTheme;\n    });\n  }, []);\n\n  const theme: Theme = createMuiTheme({\n    palette: {\n      primary: darkTheme ? lightGreen : brown,\n      secondary: blueGrey,\n      type: darkTheme ? \"dark\" : \"light\",\n    },\n    overrides: {\n      MuiPaper: {\n        root: {\n          cursor: \"pointer\",\n          padding: 8,\n        },\n      },\n      MuiDivider: {\n        root: {\n          backgroundColor: \"rgba(255,255,255,0.5)\",\n        },\n      },\n    },\n    typography: {\n      fontFamily: \"'Nunito', sans-serif\",\n      fontWeightLight: 300,\n      fontWeightMedium: 400,\n      fontWeightRegular: 400,\n      fontWeightBold: 700,\n    },\n    props: {\n      MuiDivider: {\n        light: darkTheme ? false : true,\n      },\n      MuiTextField: {\n        variant: \"outlined\",\n        margin: \"dense\",\n        fullWidth: true,\n      },\n      MuiButton: {\n        size: \"small\",\n      },\n      MuiRadio: {\n        size: \"small\",\n      },\n    },\n    custom: {\n      colors: {\n        pastel: {\n          violet: purple[pastelCode],\n          indigo: indigo[pastelCode],\n          blue: blue[pastelCode],\n          green: green[pastelCode],\n          yellow: yellow[pastelCode],\n          orange: orange[pastelCode],\n          red: red[pastelCode],\n        },\n      },\n    },\n  });\n\n  const value = React.useMemo(\n    () => ({\n      darkTheme,\n      handleToggleDarkTheme,\n    }),\n    [darkTheme, handleToggleDarkTheme]\n  );\n\n  return (\n    <ThemeContext.Provider value={value}>\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        {children}\n      </MuiThemeProvider>\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = (): any => React.useContext(ThemeContext);\n\nexport default ThemeProvider;\n","import React from \"react\";\nimport MuiIconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport DeleteSweepIcon from \"@material-ui/icons/DeleteSweep\";\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\nimport InvertColorsOffIcon from \"@material-ui/icons/InvertColorsOff\";\nimport LanguageIcon from \"@material-ui/icons/Translate\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport DeveloperBoardIcon from \"@material-ui/icons/DeveloperBoard\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ListIcon from \"@material-ui/icons/List\";\n\nconst icons = {\n  edit: EditIcon,\n  delete: DeleteIcon,\n  add: AddIcon,\n  deleteSweep: DeleteSweepIcon,\n  deleteForever: DeleteForeverIcon,\n  invertColors: InvertColorsIcon,\n  invertColorsOff: InvertColorsOffIcon,\n  gitHub: GitHubIcon,\n  language: LanguageIcon,\n  personalKanban: DeveloperBoardIcon,\n  info: InfoIcon,\n  list: ListIcon,\n};\n\ntype IconButtonProps = MuiIconButtonProps & {\n  icon: keyof typeof icons;\n  iconProps?: any;\n  component?: any;\n  href?: string;\n  target?: string;\n};\n\nconst IconButton: React.FC<IconButtonProps> = (props) => {\n  const { icon, iconProps = {}, ...rest } = props;\n  const Icon = icons[icon];\n  return Icon ? (\n    <MuiIconButton size=\"small\" {...rest}>\n      <Icon fontSize=\"small\" {...iconProps} />\n    </MuiIconButton>\n  ) : null;\n};\n\nexport default IconButton;\n","import IconButton from \"./IconButton\";\n\nexport default IconButton;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { Record } from \"PersonalKanban/types\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\n\nconst useStyles = makeStyles(() => ({\n  paper: {\n    height: 150,\n  },\n  description: {\n    maxHeight: \"5rem\",\n    minHeight: \"5rem\",\n    display: \"-webkit-box\",\n    \"-webkit-line-clamp\": 4,\n    \"-webkit-box-orient\": \"vertical\",\n    overflow: \"hidden\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\ntype CardProps = {\n  record: Record;\n  className?: string;\n  style?: any;\n  innerRef?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  onDelete?: any;\n  onEdit?: any;\n};\n\nconst Card: React.FC<CardProps> = (props) => {\n  const {\n    record,\n    className,\n    innerRef,\n    style,\n    showEditAction,\n    showDeleteAction,\n    onDelete,\n    onEdit,\n    ...rest\n  } = props;\n  const { title, description, createdAt } = record;\n\n  const classes = useStyles();\n\n  const handleEdit = React.useCallback(() => onEdit(record), [record, onEdit]);\n\n  const handleDelete = React.useCallback(() => onDelete(record), [\n    record,\n    onDelete,\n  ]);\n\n  return (\n    <Paper\n      className={clsx(classes.paper, className)}\n      style={style}\n      ref={innerRef}\n      {...rest}\n    >\n      <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Typography title={title} gutterBottom noWrap>\n          <b>{title}</b>\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\">\n          {showEditAction && <IconButton icon=\"edit\" onClick={handleEdit} />}\n          {showDeleteAction && (\n            <IconButton icon=\"deleteForever\" onClick={handleDelete} />\n          )}\n        </Box>\n      </Box>\n      <Typography\n        title={description}\n        className={classes.description}\n        variant=\"body2\"\n        gutterBottom\n      >\n        {description}\n      </Typography>\n      <Typography component=\"p\" variant=\"caption\" noWrap>\n        {createdAt}\n      </Typography>\n    </Paper>\n  );\n};\n\nCard.defaultProps = {\n  showDeleteAction: true,\n  showEditAction: true,\n};\n\nexport default Card;\n","import Card from \"./Card\";\n\nexport default Card;\n","import purple from \"@material-ui/core/colors/purple\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport green from \"@material-ui/core/colors/green\";\nimport yellow from \"@material-ui/core/colors/yellow\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport red from \"@material-ui/core/colors/red\";\n\nconst RECORD_SHADE = 200;\n\nexport const RecordColor = {\n  Purple: purple[RECORD_SHADE],\n  Indigo: indigo[RECORD_SHADE],\n  Blue: blue[RECORD_SHADE],\n  Green: green[RECORD_SHADE],\n  Yellow: yellow[RECORD_SHADE],\n  Orange: orange[RECORD_SHADE],\n  Red: red[RECORD_SHADE],\n  Default: \"\",\n};\n\nexport const DARK_RECORD_SHADE = 500;\n\nexport const DarkRecordColor = {\n  Purple: purple[DARK_RECORD_SHADE],\n  Indigo: indigo[DARK_RECORD_SHADE],\n  Blue: blue[DARK_RECORD_SHADE],\n  Green: green[DARK_RECORD_SHADE],\n  Yellow: yellow[700],\n  Orange: orange[DARK_RECORD_SHADE],\n  Red: red[DARK_RECORD_SHADE],\n  Default: \"\",\n};\n\nconst COLUMN_SHADE = 100;\n\nexport const ColumnColor = {\n  Purple: purple[COLUMN_SHADE],\n  Indigo: indigo[COLUMN_SHADE],\n  Blue: blue[COLUMN_SHADE],\n  Green: green[COLUMN_SHADE],\n  Yellow: yellow[COLUMN_SHADE],\n  Orange: orange[COLUMN_SHADE],\n  Red: red[COLUMN_SHADE],\n  Default: \"\",\n};\n\nexport const DARK_COLUMN_SHADE = 400;\n\nexport const DarkColumnColor = {\n  Purple: purple[DARK_COLUMN_SHADE],\n  Indigo: indigo[DARK_COLUMN_SHADE],\n  Blue: blue[DARK_COLUMN_SHADE],\n  Green: green[DARK_COLUMN_SHADE],\n  Yellow: yellow[700],\n  Orange: orange[DARK_COLUMN_SHADE],\n  Red: red[DARK_COLUMN_SHADE],\n  Default: \"\",\n};\n","import React from \"react\";\nimport MuiRadio, { RadioProps as MuiRadioProps } from \"@material-ui/core/Radio\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    color: (props: any) => props.color,\n  },\n  checked: {},\n}));\n\ntype RadioProps = Omit<MuiRadioProps, \"color\"> & { color?: string };\n\nconst Radio = React.forwardRef((props: RadioProps, ref: any) => {\n  const { color, ...rest } = props;\n\n  const classes = useStyles({ color });\n\n  return (\n    <MuiRadio\n      ref={ref}\n      color=\"default\"\n      classes={color ? classes : {}}\n      {...rest}\n    />\n  );\n});\n\nexport default Radio;\n","import Radio from './Radio';\n\nexport default Radio","import React from \"react\";\nimport { I18nextProvider, initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport i18next from \"i18next\";\n\nimport cn from \"PersonalKanban/assets/locales/cn/translations.json\";\nimport de from \"PersonalKanban/assets/locales/de/translations.json\";\nimport en from \"PersonalKanban/assets/locales/en/translations.json\";\nimport es from \"PersonalKanban/assets/locales/es/translations.json\";\nimport fr from \"PersonalKanban/assets/locales/fr/translations.json\";\nimport ind from \"PersonalKanban/assets/locales/in/translations.json\";\nimport ru from \"PersonalKanban/assets/locales/ru/translations.json\";\nimport jp from \"PersonalKanban/assets/locales/jp/translations.json\";\n\nexport { useTranslation } from \"react-i18next\";\n\nconst i18n = i18next.createInstance();\n\ni18n\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    fallbackLng: \"en\",\n    resources: {\n      cn: { translation: { ...cn } },\n      de: { translation: { ...de } },\n      en: { translation: { ...en } },\n      es: { translation: { ...es } },\n      fr: { translation: { ...fr } },\n      in: { translation: { ...ind } },\n      jp: { translation: { ...jp } },\n      ru: { translation: { ...ru } },\n    },\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\ntype TranslationProviderProps = {};\n\nconst TranslationProvider: React.FC<TranslationProviderProps> = ({\n  children,\n}) => {\n  return <I18nextProvider i18n={i18n}>{children}</I18nextProvider>;\n};\n\nexport default TranslationProvider;\n","import ColumnForm from \"./ColumnForm\";\n\nexport default ColumnForm;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport { Column } from \"PersonalKanban/types\";\nimport { ColumnColor } from \"PersonalKanban/enums/index\";\nimport Radio from \"PersonalKanban/components/Radio\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\n\ntype ColumnFormProps = {\n  column?: Partial<Column>;\n  onSubmit: any;\n  onCancel: any;\n  disabled?: boolean;\n  formTitle?: string;\n};\n\nconst ColumnForm: React.FC<ColumnFormProps> = (props) => {\n  const { t } = useTranslation();\n\n  const {\n    column,\n    disabled,\n    formTitle = t(\"addColumn\"),\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const { values, errors, handleChange, handleSubmit } = useFormik({\n    initialValues: Object.assign(\n      {\n        title: \"\",\n        description: \"\",\n        color: \"\",\n        wipEnabled: false,\n        wipLimit: 0,\n      },\n      column\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.title) {\n        errors.title = t(\"titleRequired\");\n      }\n\n      if (values.wipEnabled && !values.wipLimit) {\n        errors.wipLimit = t(\"limitRequired\");\n      }\n\n      return errors;\n    },\n  });\n\n  const handleWipLimitChange = React.useCallback(\n    (e) => {\n      e.persist();\n      const { value } = e.target;\n      const integerRegex = /^[0-9]*$/;\n      if (value && !integerRegex.test(value)) {\n        return;\n      }\n\n      handleChange(e);\n    },\n    [handleChange]\n  );\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography gutterBottom variant=\"h6\">\n            {formTitle}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"title\"\n            label={t(\"title\")}\n            value={values.title}\n            error={Boolean(errors.title)}\n            helperText={errors.title}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            rows={3}\n            name=\"description\"\n            label={t(\"description\")}\n            value={values.description}\n            error={Boolean(errors.description)}\n            helperText={errors.description}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={values.wipEnabled}\n                onChange={handleChange}\n                name=\"wipEnabled\"\n              />\n            }\n            label={t(\"wipLimitEnabled\")}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"wipLimit\"\n            label={t(\"wipLimit\")}\n            value={values.wipLimit}\n            error={Boolean(errors.wipLimit)}\n            helperText={errors.wipLimit}\n            disabled={disabled || !values.wipEnabled}\n            onChange={handleWipLimitChange}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{t(\"background\")}</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"background\"\n              name=\"color\"\n              value={values.color}\n              onChange={handleChange}\n            >\n              {Object.keys(ColumnColor).map((key) => {\n                const colorKey = key as keyof typeof ColumnColor;\n                return (\n                  <Radio\n                    key={colorKey}\n                    value={colorKey}\n                    color={ColumnColor[colorKey]}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={disabled}\n          >\n            {t(\"submit\")}\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default ColumnForm;\n","import RecordForm from \"./RecordForm\";\n\nexport default RecordForm;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport { Record } from \"PersonalKanban/types\";\nimport { RecordColor } from \"PersonalKanban/enums\";\nimport Radio from \"PersonalKanban/components/Radio\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\n\ntype RecordFormProps = {\n  record?: Record;\n  onSubmit: any;\n  onCancel?: any;\n  disabled?: boolean;\n  formTitle?: string;\n};\n\nconst RecordForm: React.FC<RecordFormProps> = (props) => {\n  const { t } = useTranslation();\n\n  const {\n    record,\n    disabled,\n    formTitle = t(\"addRecord\"),\n    onSubmit,\n    onCancel,\n  } = props;\n\n  const { values, errors, handleChange, handleSubmit } = useFormik({\n    initialValues: Object.assign(\n      {\n        title: \"\",\n        description: \"\",\n        color: \"\",\n      },\n      record\n    ),\n    onSubmit: (values) => {\n      onSubmit && onSubmit(values);\n    },\n    validate: (values) => {\n      const errors: any = {};\n      if (!values.title) {\n        errors.title = t(\"titleRequired\");\n      }\n\n      return errors;\n    },\n  });\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography gutterBottom variant=\"h6\">\n            {formTitle}\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            name=\"title\"\n            label={t(\"title\")}\n            value={values.title}\n            error={Boolean(errors.title)}\n            helperText={errors.title}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            multiline\n            rows={3}\n            name=\"description\"\n            label={t(\"description\")}\n            value={values.description}\n            error={Boolean(errors.description)}\n            helperText={errors.description}\n            disabled={disabled}\n            onChange={handleChange}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl component=\"fieldset\">\n            <FormLabel component=\"legend\">{t(\"background\")}</FormLabel>\n            <RadioGroup\n              row\n              aria-label=\"background\"\n              name=\"color\"\n              value={values.color}\n              onChange={handleChange}\n            >\n              {Object.keys(RecordColor).map((key) => {\n                const colorKey = key as keyof typeof RecordColor;\n                return (\n                  <Radio\n                    key={colorKey}\n                    value={colorKey}\n                    color={RecordColor[colorKey]}\n                  />\n                );\n              })}\n            </RadioGroup>\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <Button variant=\"outlined\" disabled={disabled} onClick={onCancel}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            variant=\"contained\"\n            disabled={disabled}\n          >\n            {t(\"submit\")}\n          </Button>\n        </Grid>\n      </Grid>\n    </form>\n  );\n};\n\nexport default RecordForm;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport Box from \"@material-ui/core/Box\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"PersonalKanban/components/Card\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\nimport ColumnForm from \"PersonalKanban/components/ColumnForm\";\nimport RecordForm from \"PersonalKanban/components/RecordForm\";\nimport { ColumnColor, DarkColumnColor } from \"PersonalKanban/enums\";\nimport { Record, Column as ColumnType } from \"PersonalKanban/types\";\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\n\nconst useColumnHeaderStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ntype ColumnHeaderProps = {\n  title: string;\n  description?: string;\n  onEdit?: any;\n  onDelete?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n};\n\nexport const ColumnHeader: React.FC<ColumnHeaderProps> = (props) => {\n  const {\n    title,\n    description,\n    showEditAction,\n    showDeleteAction,\n    onEdit,\n    onDelete,\n  } = props;\n\n  const classes = useColumnHeaderStyles();\n  return (\n    <>\n      <Box\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        marginBottom={Boolean(description) ? 0.5 : 0}\n      >\n        <Typography variant=\"h6\" title={title} noWrap>\n          <b>{title}</b>\n        </Typography>\n        <Box display=\"flex\" alignItems=\"center\">\n          {showEditAction && <IconButton icon=\"edit\" onClick={onEdit} />}\n          {showDeleteAction && (\n            <IconButton icon=\"deleteForever\" onClick={onDelete} />\n          )}\n        </Box>\n      </Box>\n      <Typography title={description} noWrap gutterBottom>\n        {description}\n      </Typography>\n\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\nColumnHeader.defaultProps = { showEditAction: true, showDeleteAction: true };\n\nconst useColumnActionStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(0.5),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\ntype ColumnActionProps = {\n  onAddRecord?: any;\n  onDeleteAllRecord?: any;\n  showAddRecordAction?: boolean;\n  showAllRecordDeleteAction?: boolean;\n  disableAllRecordDeleteAction?: boolean;\n  disableAddRecordAction?: boolean;\n};\n\nexport const ColumnAction: React.FC<ColumnActionProps> = (props) => {\n  const {\n    showAddRecordAction,\n    showAllRecordDeleteAction,\n    disableAllRecordDeleteAction,\n    disableAddRecordAction,\n    onAddRecord,\n    onDeleteAllRecord,\n  } = props;\n  const classes = useColumnActionStyles();\n  return (\n    <>\n      {showAddRecordAction && (\n        <IconButton\n          icon=\"add\"\n          disabled={disableAddRecordAction}\n          onClick={onAddRecord}\n        />\n      )}\n      {showAllRecordDeleteAction && (\n        <IconButton\n          icon=\"delete\"\n          disabled={disableAllRecordDeleteAction}\n          onClick={onDeleteAllRecord}\n        />\n      )}\n\n      <Divider className={classes.divider} />\n    </>\n  );\n};\n\nColumnAction.defaultProps = {\n  showAddRecordAction: true,\n  showAllRecordDeleteAction: true,\n};\n\nconst useColumnCardListStyles = makeStyles((theme) => ({\n  card: {\n    marginBottom: theme.spacing(),\n  },\n}));\n\ntype ColumnCardListProps = {\n  column: ColumnType;\n  innerRef?: any;\n  CardComponent?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nexport const ColumnCardList: React.FC<ColumnCardListProps> = (props) => {\n  const {\n    column,\n    innerRef,\n    CardComponent = Card,\n    onRecordEdit,\n    onRecordDelete,\n  } = props;\n  const { records = [] } = column;\n\n  const { t } = useTranslation();\n\n  const classes = useColumnCardListStyles();\n\n  return (\n    <div ref={innerRef}>\n      {records && records.length ? (\n        records.map((record: Record, index) => (\n          <CardComponent\n            key={record.id}\n            record={record}\n            className={classes.card}\n            index={index}\n            onEdit={onRecordEdit}\n            onDelete={onRecordDelete}\n          />\n        ))\n      ) : (\n        <Typography>{t(\"noRecord\")}</Typography>\n      )}\n    </div>\n  );\n};\n\nconst useColumnFooterStyles = makeStyles((theme) => ({\n  divider: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(0.5),\n  },\n}));\n\ntype ColumnFooterProps = {\n  content?: string;\n};\n\nexport const ColumnFooter: React.FC<ColumnFooterProps> = (props) => {\n  const { content } = props;\n\n  const classes = useColumnFooterStyles();\n  return (\n    <>\n      <Divider className={classes.divider} />\n      <Typography variant=\"caption\" component=\"p\" title={content} noWrap>\n        {content}\n      </Typography>\n    </>\n  );\n};\n\nconst useColumnStyles = makeStyles(() => ({\n  paper: (props: any) => ({\n    backgroundColor: props.backgroundColor,\n  }),\n}));\n\ntype ColumnProps = {\n  column: ColumnType;\n  className?: string;\n  innerRef?: any;\n  onEdit?: any;\n  onDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  showEditAction?: boolean;\n  showDeleteAction?: boolean;\n  showAddRecordAction?: boolean;\n  showDeleteAllRecordAction?: boolean;\n  ColumnHeaderComponent?: any;\n  ColumnActionComponent?: any;\n  ColumnCardListComponent?: any;\n  ColumnFooterComponent?: any;\n};\n\nconst Column: React.FC<ColumnProps> = (props) => {\n  const {\n    column,\n    className,\n    innerRef,\n    onEdit,\n    onDelete,\n    onAddRecord,\n    onAllRecordDelete,\n    showDeleteAction,\n    showEditAction,\n    onRecordEdit,\n    onRecordDelete,\n    showAddRecordAction,\n    showDeleteAllRecordAction,\n    ColumnHeaderComponent = ColumnHeader,\n    ColumnActionComponent = ColumnAction,\n    ColumnCardListComponent = ColumnCardList,\n    ColumnFooterComponent = ColumnFooter,\n    ...rest\n  } = props;\n\n  const {\n    title,\n    description,\n    caption,\n    color,\n    records = [],\n    wipEnabled,\n    wipLimit = Infinity,\n  } = column;\n\n  const disableAddRecordAction = wipEnabled && wipLimit <= records.length;\n\n  const disableAllRecordDeleteAction = !records.length;\n\n  const columnColor = color as keyof typeof ColumnColor;\n\n  const { darkTheme } = useTheme();\n\n  const { t } = useTranslation();\n\n  const classes = useColumnStyles({\n    backgroundColor: darkTheme\n      ? DarkColumnColor[columnColor]\n      : ColumnColor[columnColor],\n  });\n\n  const [dialog, setDialog] = React.useState({\n    open: false,\n    title: \"\",\n    content: null,\n    actions: null,\n  });\n\n  const handleDelete = React.useCallback(\n    (e) => {\n      onDelete && onDelete({ column, e });\n    },\n    [column, onDelete]\n  );\n\n  const handleEdit = React.useCallback(\n    (column: ColumnType) => {\n      onEdit && onEdit({ column });\n    },\n    [onEdit]\n  );\n\n  const handleAddRecord = React.useCallback(\n    (record: Record) => {\n      onAddRecord && onAddRecord({ column, record });\n    },\n    [column, onAddRecord]\n  );\n\n  const handleRecordEdit = React.useCallback(\n    (record: Record) => {\n      onRecordEdit({ column, record });\n    },\n    [column, onRecordEdit]\n  );\n\n  const handleRecordDelete = React.useCallback(\n    (record: Record) => {\n      onRecordDelete({ column, record });\n    },\n    [column, onRecordDelete]\n  );\n\n  const handleAllRecordDelete = React.useCallback(() => {\n    onAllRecordDelete({ column });\n  }, [column, onAllRecordDelete]);\n\n  const handleOpenDialog = React.useCallback(({ content, title, actions }) => {\n    setDialog({ content, title, actions, open: true });\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setDialog(() => ({ content: null, title: \"\", actions: null, open: false }));\n  }, []);\n\n  const handleOpenDeleteDialog = React.useCallback(() => {\n    const content = <Typography>{t(\"deleteColumnConfirmation\")}</Typography>;\n    const actions = (\n      <>\n        <Button variant=\"outlined\" onClick={handleCloseDialog}>\n          {t(\"cancel\")}\n        </Button>\n        &nbsp;\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={(e) => {\n            handleCloseDialog();\n            handleDelete(e);\n          }}\n        >\n          {t(\"delete\")}\n        </Button>\n      </>\n    );\n\n    handleOpenDialog({ content, actions, title: t(\"deleteColumn\") });\n  }, [t, handleOpenDialog, handleDelete, handleCloseDialog]);\n\n  const handleOpenEditDialog = React.useCallback(() => {\n    const content = (\n      <ColumnForm\n        column={column}\n        formTitle={t(\"editColumn\")}\n        onSubmit={(column: any) => {\n          handleCloseDialog();\n          handleEdit(column);\n        }}\n        onCancel={handleCloseDialog}\n      ></ColumnForm>\n    );\n\n    handleOpenDialog({ content });\n  }, [column, t, handleOpenDialog, handleCloseDialog, handleEdit]);\n\n  const handleOpenAddRecordDialog = React.useCallback(() => {\n    const content = (\n      <RecordForm\n        onSubmit={(record: Record) => {\n          handleCloseDialog();\n          handleAddRecord(record);\n        }}\n        onCancel={handleCloseDialog}\n      ></RecordForm>\n    );\n\n    handleOpenDialog({ content });\n  }, [handleOpenDialog, handleCloseDialog, handleAddRecord]);\n\n  const handleOpenEditRecordDialog = React.useCallback(\n    (record: Record) => {\n      const content = (\n        <RecordForm\n          record={record}\n          onSubmit={(record: Record) => {\n            handleCloseDialog();\n            handleRecordEdit(record);\n          }}\n          onCancel={handleCloseDialog}\n        ></RecordForm>\n      );\n\n      handleOpenDialog({ content });\n    },\n    [handleOpenDialog, handleCloseDialog, handleRecordEdit]\n  );\n\n  const handleOpenDeleteRecordDialog = React.useCallback(\n    (record: Record) => {\n      const content = <Typography>{t(\"deleteRecordConfirmation\")}</Typography>;\n      const actions = (\n        <>\n          <Button variant=\"outlined\" onClick={handleCloseDialog}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              handleCloseDialog();\n              handleRecordDelete(record);\n            }}\n          >\n            {t(\"delete\")}\n          </Button>\n        </>\n      );\n\n      handleOpenDialog({ content, actions, title: t(\"deleteRecord\") });\n    },\n    [t, handleOpenDialog, handleCloseDialog, handleRecordDelete]\n  );\n\n  const handleOpenDeleteAllRecordDialog = React.useCallback(\n    (record: Record) => {\n      const content = (\n        <Typography>{t(\"deleteAllRecordConfirmation\")}</Typography>\n      );\n      const actions = (\n        <>\n          <Button variant=\"outlined\" onClick={handleCloseDialog}>\n            {t(\"cancel\")}\n          </Button>\n          &nbsp;\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={(e) => {\n              handleCloseDialog();\n              handleAllRecordDelete();\n            }}\n          >\n            {t(\"delete\")}\n          </Button>\n        </>\n      );\n\n      handleOpenDialog({ content, actions, title: t(\"deleteAllRecord\") });\n    },\n    [t, handleOpenDialog, handleCloseDialog, handleAllRecordDelete]\n  );\n\n  return (\n    <Paper\n      elevation={4}\n      className={clsx(className, classes.paper)}\n      ref={innerRef}\n      {...rest}\n    >\n      <ColumnHeaderComponent\n        title={title}\n        description={description}\n        showEditAction={showEditAction}\n        showDeleteAction={showDeleteAction}\n        onEdit={handleOpenEditDialog}\n        onDelete={handleOpenDeleteDialog}\n      />\n      <ColumnActionComponent\n        showAddRecordAction={showAddRecordAction}\n        showDeleteAllRecordAction={showDeleteAllRecordAction}\n        disableAddRecordAction={disableAddRecordAction}\n        disableAllRecordDeleteAction={disableAllRecordDeleteAction}\n        onAddRecord={handleOpenAddRecordDialog}\n        onDeleteAllRecord={handleOpenDeleteAllRecordDialog}\n      />\n      <ColumnCardListComponent\n        column={column}\n        onRecordEdit={handleOpenEditRecordDialog}\n        onRecordDelete={handleOpenDeleteRecordDialog}\n      />\n      <ColumnFooterComponent content={caption} />\n      <Dialog open={dialog.open} onClose={handleCloseDialog}>\n        <DialogTitle>{dialog.title}</DialogTitle>\n        <DialogContent>{dialog.content}</DialogContent>\n        <DialogActions>{dialog.actions}</DialogActions>\n      </Dialog>\n    </Paper>\n  );\n};\n\nexport default Column;\n","import Column from \"./Column\";\nexport { ColumnCardList, ColumnFooter, ColumnHeader } from \"./Column\";\n\nexport default Column;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Column from \"PersonalKanban/components/Column\";\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\nimport { Column as ColumnType } from \"PersonalKanban/types\";\nimport { COLUMN_WIDTH } from \"PersonalKanban/constants\";\n\nconst useBoardStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"inline-flex\",\n    width: \"fit-content\",\n  },\n  column: {\n    width: COLUMN_WIDTH,\n    margin: theme.spacing(),\n    height: \"fit-content\",\n  },\n}));\n\ntype BoardProps = {\n  columns: ColumnType[];\n  innerRef: any;\n  ColumnComponent: any;\n  placeholder?: any;\n  onColumnEdit?: any;\n  onColumnDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n};\n\nconst Board: React.FC<BoardProps> = (props) => {\n  const {\n    columns,\n    innerRef,\n    ColumnComponent = Column,\n    placeholder,\n    onColumnEdit,\n    onColumnDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    ...rest\n  } = props;\n\n  const classes = useBoardStyles();\n\n  const { t } = useTranslation();\n\n  return (\n    <div className={classes.root} ref={innerRef} {...rest}>\n      {columns && columns.length ? (\n        columns.map((column, index) => (\n          <ColumnComponent\n            index={index}\n            key={column.id}\n            column={column}\n            className={classes.column}\n            onEdit={onColumnEdit}\n            onDelete={onColumnDelete}\n            onAddRecord={onAddRecord}\n            onRecordEdit={onRecordEdit}\n            onRecordDelete={onRecordDelete}\n            onAllRecordDelete={onAllRecordDelete}\n          />\n        ))\n      ) : (\n        <Box display=\"flex\" justifyContent=\"center\">\n          <Typography>{t(\"noColumn\")}</Typography>\n        </Box>\n      )}\n      {placeholder}\n    </div>\n  );\n};\n\nexport default Board;\n","export const COLUMN_WIDTH = 250;\n","import Board from \"./Board\";\n\nexport default Board;\n","import KanbanCard from \"./KanbanCard\";\n\nexport default KanbanCard;\n","import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nimport Card from \"PersonalKanban/components/Card\";\nimport { Record } from \"PersonalKanban/types\";\nimport { RecordColor, DarkRecordColor } from \"PersonalKanban/enums\";\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\n\ntype KanbanCardProps = {\n  record: Record;\n  index: number;\n  className?: string;\n  onEdit?: any;\n  onDelete?: any;\n};\n\nconst KanbanCard: React.FC<KanbanCardProps> = (props) => {\n  const { record, index, className, onEdit, onDelete } = props;\n\n  const recordColor = record.color as keyof typeof RecordColor;\n\n  const { darkTheme } = useTheme();\n\n  return (\n    <Draggable draggableId={record.id} index={index}>\n      {(provided) => (\n        <Card\n          key={record.id}\n          innerRef={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            ...provided.draggableProps.style,\n            backgroundColor: darkTheme\n              ? DarkRecordColor[recordColor]\n              : RecordColor[recordColor],\n          }}\n          record={record}\n          className={className}\n          onEdit={onEdit}\n          onDelete={onDelete}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nexport default KanbanCard;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\n\nimport KanbanCard from \"PersonalKanban/components/KanbanCard\";\nimport Column, { ColumnCardList } from \"PersonalKanban/components/Column\";\nimport { Column as ColumnType } from \"PersonalKanban/types\";\n\ntype KanbanInnerColumnCardListProps = {\n  column: ColumnType;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nconst KanbanInnerColumnCardList: React.FC<KanbanInnerColumnCardListProps> = React.memo(\n  (props) => {\n    const { column, onRecordEdit, onRecordDelete } = props;\n    return (\n      <ColumnCardList\n        column={column}\n        CardComponent={KanbanCard}\n        onRecordEdit={onRecordEdit}\n        onRecordDelete={onRecordDelete}\n      />\n    );\n  }\n);\n\ntype KanbanColumnCardListProps = {\n  column: ColumnType;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n};\n\nconst KanbanColumnCardList: React.FC<KanbanColumnCardListProps> = (props) => {\n  const { column, onRecordEdit, onRecordDelete } = props;\n  const { id: columnId, records = [], wipEnabled, wipLimit = false } = column;\n  const isDropDisabled = wipEnabled && wipLimit <= records?.length;\n  return (\n    <Droppable droppableId={columnId} isDropDisabled={isDropDisabled}>\n      {(provided) => (\n        <div ref={provided.innerRef} {...provided.droppableProps}>\n          <KanbanInnerColumnCardList\n            column={column}\n            onRecordEdit={onRecordEdit}\n            onRecordDelete={onRecordDelete}\n          />\n          {provided.placeholder}\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\ntype KanbanColumnProps = {\n  column: ColumnType;\n  index: number;\n  className?: string;\n  onEdit?: any;\n  onDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n};\n\nconst KanbanColumn: React.FC<KanbanColumnProps> = (props) => {\n  const {\n    column,\n    index,\n    className,\n    onEdit,\n    onDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n  } = props;\n\n  const { t } = useTranslation();\n\n  const _column = Object.assign({}, column, {\n    caption: column.wipEnabled\n      ? `${t(\"wipLimit\")} :${column.wipLimit}`\n      : column.createdAt,\n  });\n\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided) => (\n        <Column\n          innerRef={provided.innerRef}\n          column={_column}\n          className={className}\n          ColumnCardListComponent={KanbanColumnCardList}\n          onEdit={onEdit}\n          onDelete={onDelete}\n          onAddRecord={onAddRecord}\n          onRecordEdit={onRecordEdit}\n          onRecordDelete={onRecordDelete}\n          onAllRecordDelete={onAllRecordDelete}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n        />\n      )}\n    </Draggable>\n  );\n};\n\nexport default KanbanColumn;\n","import KanbanColumn from \"./KanbanColumn\";\n\nexport default KanbanColumn;\n","import KanbanBoard from \"./KanbanBoard\";\n\nexport default KanbanBoard;\n","import React from \"react\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nimport Board from \"PersonalKanban/components/Board\";\nimport KanbanColumn from \"PersonalKanban/components/KanbanColumn\";\nimport { Column } from \"PersonalKanban/types\";\n\ntype KanbanBoardProps = {\n  columns: Column[];\n  onCardMove?: any;\n  onColumnMove?: any;\n  onColumnEdit?: any;\n  onColumnDelete?: any;\n  onAddRecord?: any;\n  onRecordEdit?: any;\n  onRecordDelete?: any;\n  onAllRecordDelete?: any;\n  ColumnComponent?: any;\n};\n\nconst KanbanBoard: React.FC<KanbanBoardProps> = (props) => {\n  const {\n    columns,\n    onCardMove,\n    onColumnMove,\n    onColumnEdit,\n    onColumnDelete,\n    onAddRecord,\n    onRecordEdit,\n    onRecordDelete,\n    onAllRecordDelete,\n    ColumnComponent = KanbanColumn,\n  } = props;\n\n  const getColumnById = React.useCallback(\n    (columnId) => columns.find((column) => column.id === columnId),\n    [columns]\n  );\n\n  const getColumnByIndex = React.useCallback((index) => columns[index], [\n    columns,\n  ]);\n\n  const handleDragEnd = React.useCallback(\n    (result) => {\n      const { source, destination, type } = result;\n\n      if (!destination) {\n        // Invalid Destination\n        return;\n      }\n\n      if (\n        source.droppableId === destination.droppableId &&\n        source.index === destination.index\n      ) {\n        // Drop position is same as original\n        return;\n      }\n\n      if (type === \"COLUMN\") {\n        onColumnMove({\n          column: getColumnByIndex(source.index),\n          index: destination.index,\n        });\n        return;\n      }\n\n      const record = getColumnById(source.droppableId)?.records?.[source.index];\n\n      onCardMove({\n        source: getColumnById(source.droppableId),\n        column: getColumnById(destination.droppableId),\n        record,\n        index: destination.index,\n      });\n    },\n    [onColumnMove, onCardMove, getColumnByIndex, getColumnById]\n  );\n\n  return (\n    <DragDropContext onDragEnd={handleDragEnd}>\n      <Droppable droppableId=\"BOARD\" type=\"COLUMN\" direction=\"horizontal\">\n        {(provided) => (\n          <>\n            <Board\n              innerRef={provided.innerRef}\n              ColumnComponent={ColumnComponent}\n              {...provided.droppableProps}\n              columns={columns}\n              placeholder={provided.placeholder}\n              onColumnEdit={onColumnEdit}\n              onColumnDelete={onColumnDelete}\n              onAddRecord={onAddRecord}\n              onRecordEdit={onRecordEdit}\n              onRecordDelete={onRecordDelete}\n              onAllRecordDelete={onAllRecordDelete}\n            />\n          </>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default KanbanBoard;\n","import { v4 as uuidv4 } from \"uuid\";\nimport moment from \"moment\";\n\nimport { Column } from \"PersonalKanban/types\";\n\nexport const getId = (): string => {\n  return uuidv4();\n};\n\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n  return result;\n};\n\nexport const getCreatedAt = () => {\n  return `${moment().format(\"DD-MM-YYYY\")} ${moment().format(\"h:mm:ss a\")}`;\n};\n\nexport const reorderCards = ({\n  columns,\n  sourceColumn,\n  destinationColumn,\n  sourceIndex,\n  destinationIndex,\n}: {\n  columns: Column[];\n  sourceColumn: Column;\n  destinationColumn: Column;\n  sourceIndex: number;\n  destinationIndex: number;\n}) => {\n  const getColumnIndex = (columnId: string) =>\n    columns.findIndex((c) => c.id === columnId);\n\n  const getRecords = (columnId: string) => [\n    ...columns.find((c) => c.id === columnId)?.records!,\n  ];\n\n  const current = getRecords(sourceColumn.id);\n  const next = getRecords(destinationColumn.id);\n  const target = current[sourceIndex];\n\n  // moving to same list\n  if (sourceColumn.id === destinationColumn.id) {\n    const reordered = reorder(current, sourceIndex, destinationIndex);\n    const newColumns = columns.map((c) => ({ ...c }));\n    newColumns[getColumnIndex(sourceColumn.id)].records = reordered;\n    return newColumns;\n  }\n\n  // moving to different list\n  current.splice(sourceIndex, 1);\n  next.splice(destinationIndex, 0, target);\n  const newColumns = columns.map((c) => ({ ...c }));\n  newColumns[getColumnIndex(sourceColumn.id)].records = current;\n  newColumns[getColumnIndex(destinationColumn.id)].records = next;\n  return newColumns;\n};\n\nexport const getInitialState = () => {\n  return [\n    {\n      id: getId(),\n      title: \"Todo\",\n      color: \"Orange\",\n      records: [\n        {\n          id: getId(),\n          color: \"Yellow\",\n          title: \"Clear Board\",\n          description:\n            \"Make a fresh start by erasing this board. Click delete button on main toolbar.\",\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      title: \"In-Progress\",\n      color: \"Red\",\n      records: [\n        {\n          id: getId(),\n          color: \"Purple\",\n          title: \"Give ratings\",\n          description: \"Rate and Star Personal Kanban\",\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n    {\n      id: getId(),\n      title: \"Completed\",\n      color: \"Green\",\n      records: [\n        {\n          id: getId(),\n          color: \"Indigo\",\n          title: \"Be Awesome\",\n          description: \"Rock the world with your creativity !\",\n          createdAt: getCreatedAt(),\n        },\n      ],\n      createdAt: getCreatedAt(),\n    },\n  ];\n};\n","import React, { useState } from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiToolbar from \"@material-ui/core/Toolbar\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles, useTheme as useMuiTheme } from \"@material-ui/core/styles\";\n\nimport { useTranslation } from \"PersonalKanban/providers/TranslationProvider\";\nimport ColumnForm from \"PersonalKanban/components/ColumnForm\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\nimport { Column } from \"PersonalKanban/types\";\nimport { useTheme } from \"PersonalKanban/providers/ThemeProvider\";\n\ntype AddColumnButtonProps = {\n  onSubmit: any;\n};\n\nconst AddColumnButton: React.FC<AddColumnButtonProps> = (props) => {\n  const { onSubmit } = props;\n\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenDialog = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleSubmit = React.useCallback(\n    (column: Column) => {\n      onSubmit({ column });\n      handleCloseDialog();\n    },\n    [onSubmit, handleCloseDialog]\n  );\n\n  return (\n    <Box display=\"block\">\n      <IconButton icon=\"add\" color=\"primary\" onClick={handleOpenDialog}>\n        {t(\"addColumn\")}\n      </IconButton>\n      <Dialog onClose={handleCloseDialog} open={open}>\n        <DialogContent>\n          <ColumnForm onSubmit={handleSubmit} onCancel={handleCloseDialog} />\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\ntype ClearBoardButtonProps = {\n  onClear: any;\n  disabled?: boolean;\n};\n\nconst ClearBoardButton: React.FC<ClearBoardButtonProps> = (props) => {\n  const { disabled, onClear } = props;\n\n  const { t } = useTranslation();\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpenDialog = React.useCallback(() => {\n    setOpen(true);\n  }, []);\n\n  const handleCloseDialog = React.useCallback(() => {\n    setOpen(false);\n  }, []);\n\n  const handleClear = React.useCallback(\n    (e) => {\n      onClear({ e });\n      handleCloseDialog();\n    },\n    [onClear, handleCloseDialog]\n  );\n\n  return (\n    <Box display=\"flex\">\n      <IconButton\n        icon=\"delete\"\n        color=\"primary\"\n        disabled={disabled}\n        onClick={handleOpenDialog}\n      ></IconButton>\n      <Dialog onClose={handleCloseDialog} open={open}>\n        <DialogContent>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Typography gutterBottom variant=\"h6\">\n                {t(\"clearBoard\")}\n              </Typography>\n              <Divider />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography gutterBottom>\n                {t(\"clearBoardConfirmation\")}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Button variant=\"outlined\" onClick={handleCloseDialog}>\n                {t(\"cancel\")}\n              </Button>\n              &nbsp;\n              <Button color=\"primary\" variant=\"contained\" onClick={handleClear}>\n                {t(\"clear\")}\n              </Button>\n            </Grid>\n          </Grid>\n        </DialogContent>\n      </Dialog>\n    </Box>\n  );\n};\n\ntype LanguageButtonProps = {};\n\nconst LanguageButton: React.FC<LanguageButtonProps> = (props) => {\n  const { i18n } = useTranslation();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleChangeLanguage = (lng: string) => () => {\n    i18n.changeLanguage(lng);\n    handleClose();\n  };\n\n  return (\n    <Box display=\"block\">\n      <IconButton\n        icon={\"language\"}\n        aria-controls=\"language-menu\"\n        aria-haspopup=\"true\"\n        color=\"inherit\"\n        onClick={handleClick}\n      />\n      <Menu\n        id=\"language-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleChangeLanguage(\"en\")}>English</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"fr\")}>Français</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"es\")}>Español</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"ru\")}>Pусский</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"de\")}>Deutsch</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"in\")}>हिंदी</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"jp\")}>日本語</MenuItem>\n        <MenuItem onClick={handleChangeLanguage(\"cn\")}>中文</MenuItem>\n      </Menu>\n    </Box>\n  );\n};\n\nconst DarkThemeButton: React.FC<{}> = () => {\n  const { darkTheme, handleToggleDarkTheme } = useTheme();\n\n  return (\n    <IconButton\n      color=\"inherit\"\n      icon={darkTheme ? \"invertColors\" : \"invertColorsOff\"}\n      onClick={handleToggleDarkTheme}\n    />\n  );\n};\n\nconst GitHubButton: React.FC<{}> = () => {\n  return (\n    <IconButton\n      color=\"inherit\"\n      icon=\"gitHub\"\n      component={Link}\n      href=\"https://github.com/nishantpainter/personal-kanban\"\n      target=\"_blank\"\n    />\n  );\n};\n\nconst useInfoButtonStyles = makeStyles((theme) => ({\n  paper: {\n    maxWidth: 300,\n    minWidth: 300,\n    maxHeight: 250,\n    minHeight: 250,\n    padding: theme.spacing(),\n  },\n  buttonGridItem: {\n    textAlign: \"center\",\n  },\n}));\n\nconst InfoButton: React.FC<{}> = () => {\n  const classes = useInfoButtonStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const openInfo = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const closeInfo = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n\n  const id = open ? \"info-popover\" : undefined;\n\n  return (\n    <>\n      <IconButton icon=\"info\" color=\"primary\" onClick={openInfo} />\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={closeInfo}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n        PaperProps={{ className: classes.paper }}\n      >\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Box marginTop={2} textAlign=\"center\">\n              <img\n                src=\"https://tinymanager.js.org/readme_logo.png\"\n                height=\"30\"\n                alt=\"Stacks\"\n              />\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"body2\">\n              <Link href=\"https://tinymanager.js.org/\" target=\"_blank\">\n                Tiny Manager{\" \"}\n              </Link>\n              is an offline first simple application that assists you in\n              managing your pet projects. Along with project management it\n              allows mundane management using todos and a simple notepad\n              application, all at one place.\n            </Typography>\n          </Grid>\n          <Grid item xs={12} className={classes.buttonGridItem}>\n            <Button variant=\"contained\" color=\"primary\">\n              <Link\n                color=\"inherit\"\n                href=\"https://tinymanager.js.org/\"\n                target=\"_blank\"\n              >\n                Get Started\n              </Link>\n            </Button>\n          </Grid>\n        </Grid>\n      </Popover>\n    </>\n  );\n};\nconst useToolbarStyles = makeStyles(() => ({\n  paper: {\n    padding: 0,\n  },\n}));\n\ntype ToolbarProps = {\n  clearButtonDisabled?: boolean;\n  onNewColumn: any;\n  onClearBoard: any;\n};\n\nconst Toolbar: React.FC<ToolbarProps> = (props) => {\n  const { clearButtonDisabled, onNewColumn, onClearBoard } = props;\n\n  const { t } = useTranslation();\n\n  const classes = useToolbarStyles();\n\n  const muiTheme = useMuiTheme();\n\n  const isMobile = useMediaQuery(muiTheme.breakpoints.down(\"sm\"));\n\n  return (\n    <AppBar color=\"default\" elevation={6} className={classes.paper}>\n      <MuiToolbar>\n        <Box display=\"flex\" alignItems=\"center\">         \n\n          &nbsp;\n          <Typography variant={isMobile ? \"body1\" : \"h6\"}>\n            <b>{t(\"Kanban | Proyectos Tecnoparque | Lab. Virtuales & Electronica\")}</b>\n          </Typography>\n        </Box>\n        <Box display=\"flex\" flexGrow={1} />\n        <Box display=\"flex\">\n          <AddColumnButton onSubmit={onNewColumn} />\n          &nbsp;\n          <ClearBoardButton\n            disabled={clearButtonDisabled}\n            onClear={onClearBoard}\n          />\n          &nbsp;\n          &nbsp;\n          <DarkThemeButton /> &nbsp;\n        </Box>\n      </MuiToolbar>\n    </AppBar>\n  );\n};\n\nexport default Toolbar;\n","import React from \"react\";\n\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport KanbanBoard from \"PersonalKanban/components/KanbanBoard\";\nimport { Column, Record } from \"PersonalKanban/types\";\nimport {\n  getId,\n  getCreatedAt,\n  getInitialState,\n  reorder,\n  reorderCards,\n} from \"PersonalKanban/services/Utils\";\nimport StorageService from \"PersonalKanban/services/StorageService\";\nimport Toolbar from \"PersonalKanban/containers/Toolbar\";\nimport IconButton from \"PersonalKanban/components/IconButton\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useTinyManagerStyles = makeStyles((theme) => ({\n  button: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    padding: theme.spacing(),\n    backgroundColor: \"#3f51b5\",\n    color: \"#ffffff\",\n    \"&:hover\": {\n      backgroundColor: \"#ffffff\",\n      color: \"#3f51b5\",\n      border: \"1px solid #3f51b5\",\n    },\n  },\n}));\n\nconst TinyManagerButton = () => {\n  const styles = useTinyManagerStyles();\n  return (\n    <IconButton\n      icon=\"list\"\n      href=\"https://tinymanager.js.org/showcase.html\"\n      component={Link}\n      target=\"_blank\"\n      title=\"Tiny Manager\"\n      className={styles.button}\n    />\n  );\n};\n\nconst useKanbanBoardStyles = makeStyles((theme) => ({\n  toolbar: theme.mixins.toolbar,\n}));\n\ntype KanbanBoardContainerProps = {};\n\nlet initialState = StorageService.getColumns();\n\nif (!initialState) {\n  initialState = getInitialState();\n}\n\nconst KanbanBoardContainer: React.FC<KanbanBoardContainerProps> = (props) => {\n  const [columns, setColumns] = React.useState<Column[]>(initialState);\n\n  const classes = useKanbanBoardStyles();\n\n  const cloneColumns = React.useCallback((columns: Column[]) => {\n    return columns.map((column: Column) => ({\n      ...column,\n      records: [...column.records!],\n    }));\n  }, []);\n\n  const getColumnIndex = React.useCallback(\n    (id: string) => {\n      return columns.findIndex((c: Column) => c.id === id);\n    },\n    [columns]\n  );\n\n  const getRecordIndex = React.useCallback(\n    (recordId: string, columnId: string) => {\n      return columns[getColumnIndex(columnId)]?.records?.findIndex(\n        (r: Record) => r.id === recordId\n      );\n    },\n    [columns, getColumnIndex]\n  );\n\n  const handleClearBoard = React.useCallback(() => {\n    setColumns([]);\n  }, []);\n\n  const handleAddColumn = React.useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((columns: Column[]) => [\n        ...columns,\n        Object.assign(\n          { id: getId(), records: [], createdAt: getCreatedAt() },\n          column\n        ),\n      ]);\n    },\n    []\n  );\n\n  const handleColumnMove = React.useCallback(\n    ({ column, index }: { column: Column; index: number }) => {\n      const updatedColumns = reorder(columns, getColumnIndex(column.id), index);\n      setColumns(updatedColumns);\n    },\n    [columns, getColumnIndex]\n  );\n\n  const handleColumnEdit = React.useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((_columns: Column[]) => {\n        const columnIndex = getColumnIndex(column.id);\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].title = column.title;\n        columns[columnIndex].description = column.description;\n        columns[columnIndex].color = column.color;\n        columns[columnIndex].wipEnabled = column.wipEnabled;\n        columns[columnIndex].wipLimit = column.wipLimit;\n        return columns;\n      });\n    },\n    [getColumnIndex, cloneColumns]\n  );\n\n  const handleColumnDelete = React.useCallback(\n    ({ column }: { column: Column }) => {\n      setColumns((_columns: Column[]) => {\n        const columns = cloneColumns(_columns);\n        columns.splice(getColumnIndex(column.id), 1);\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex]\n  );\n\n  const handleCardMove = React.useCallback(\n    ({\n      column,\n      index,\n      source,\n      record,\n    }: {\n      column: Column;\n      index: number;\n      source: Column;\n      record: Record;\n    }) => {\n      const updatedColumns = reorderCards({\n        columns,\n        destinationColumn: column,\n        destinationIndex: index,\n        sourceColumn: source,\n        sourceIndex: getRecordIndex(record.id, source.id)!,\n      });\n\n      setColumns(updatedColumns);\n    },\n    [columns, getRecordIndex]\n  );\n\n  const handleAddRecord = React.useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      setColumns((_columns: Column[]) => {\n        const columns = cloneColumns(_columns);\n\n        columns[columnIndex].records = [\n          {\n            id: getId(),\n            title: record.title,\n            description: record.description,\n            color: record.color,\n            createdAt: getCreatedAt(),\n          },\n          ...columns[columnIndex].records,\n        ];\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex]\n  );\n\n  const handleRecordEdit = React.useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      const recordIndex = getRecordIndex(record.id, column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        const _record = columns[columnIndex].records[recordIndex!];\n        _record.title = record.title;\n        _record.description = record.description;\n        _record.color = record.color;\n        return columns;\n      });\n    },\n    [getColumnIndex, getRecordIndex, cloneColumns]\n  );\n\n  const handleRecordDelete = React.useCallback(\n    ({ column, record }: { column: Column; record: Record }) => {\n      const columnIndex = getColumnIndex(column.id);\n      const recordIndex = getRecordIndex(record.id, column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].records.splice(recordIndex!, 1);\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex, getRecordIndex]\n  );\n\n  const handleAllRecordDelete = React.useCallback(\n    ({ column }: { column: Column }) => {\n      const columnIndex = getColumnIndex(column.id);\n      setColumns((_columns) => {\n        const columns = cloneColumns(_columns);\n        columns[columnIndex].records = [];\n        return columns;\n      });\n    },\n    [cloneColumns, getColumnIndex]\n  );\n\n  React.useEffect(() => {\n    StorageService.setColumns(columns);\n  }, [columns]);\n\n  return (\n    <>\n      <Toolbar\n        clearButtonDisabled={!columns.length}\n        onNewColumn={handleAddColumn}\n        onClearBoard={handleClearBoard}\n      />\n      <div className={classes.toolbar} />\n      <Box padding={1}>\n        <KanbanBoard\n          columns={columns}\n          onColumnMove={handleColumnMove}\n          onColumnEdit={handleColumnEdit}\n          onColumnDelete={handleColumnDelete}\n          onCardMove={handleCardMove}\n          onAddRecord={handleAddRecord}\n          onRecordEdit={handleRecordEdit}\n          onRecordDelete={handleRecordDelete}\n          onAllRecordDelete={handleAllRecordDelete}\n        />\n      </Box>\n      <TinyManagerButton />\n    </>\n  );\n};\n\nexport default KanbanBoardContainer;\n","import React from \"react\";\n\nimport ThemeProvider from \"PersonalKanban/providers/ThemeProvider\";\nimport KanbanBoardContainer from \"PersonalKanban/containers/KanbanBoard\";\nimport TranslationProvider from \"./providers/TranslationProvider\";\n\ninterface PersonalKanbanProps {}\n\nconst PersonalKanban: React.FC<PersonalKanbanProps> = () => {\n  return (\n    <ThemeProvider>\n      <TranslationProvider>\n        <KanbanBoardContainer />\n      </TranslationProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default PersonalKanban;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport PersonalKanban from \"./PersonalKanban\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <PersonalKanban />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\nreportWebVitals();\n"],"sourceRoot":""}